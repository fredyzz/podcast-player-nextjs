{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport Error from './_error';\nimport PodcastList from '../components/PodcastList';\nimport SeriesList from '../components/SeriesList';\nimport Layout from '../components/Layout';\nimport PodcastPlayer from '../components/PodcastPlayer';\n\nvar Channel = function Channel(_ref) {\n  _s();\n\n  var channel = _ref.channel,\n      audioClips = _ref.audioClips,\n      series = _ref.series,\n      statusCode = _ref.statusCode;\n\n  var _useState = useState(null),\n      openPodcast = _useState[0],\n      setOpenPodcast = _useState[1];\n\n  var openPodcastModal = function openPodcastModal(e, podcast) {\n    e.preventDefault();\n    setOpenPodcast(podcast);\n  };\n\n  var onClose = function onClose(e) {\n    e.preventDefault();\n    setOpenPodcast(null);\n  };\n\n  if (statusCode !== 200) {\n    return __jsx(Error, {\n      statusCode: statusCode\n    });\n  }\n\n  return __jsx(Layout, {\n    title: \"Podcast\"\n  }, __jsx(\"nav\", {\n    className: \"jsx-4105422955\"\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    className: \"jsx-4105422955\"\n  }, \"< Back\"))), __jsx(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(channel.urls.banner_image.original, \")\")\n    },\n    className: \"jsx-4105422955\" + \" \" + \"banner\"\n  }), openPodcast && __jsx(\"div\", {\n    className: \"jsx-4105422955\" + \" \" + \"modal\"\n  }, __jsx(PodcastPlayer, {\n    audioClip: openPodcast,\n    onClose: onClose\n  })), __jsx(\"h1\", {\n    className: \"jsx-4105422955\"\n  }, channel.title), __jsx(SeriesList, {\n    series: series\n  }), __jsx(PodcastList, {\n    audioClips: audioClips,\n    openPodcastModal: openPodcastModal\n  }), __jsx(_JSXStyle, {\n    id: \"4105422955\"\n  }, \"nav.jsx-4105422955{position:absolute;display:inline-block;width:40px;border-radius:25%;background:#222426;box-shadow:7px 7px 14px #1b1c1e,-7px -7px 14px #292c2e;padding:8px;margin:-24px 0 0 30px;}nav.jsx-4105422955 a.jsx-4105422955{color:white;-webkit-text-decoration:none;text-decoration:none;}.banner.jsx-4105422955{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background:#222426;box-shadow:7px 7px 14px #1b1c1e,-7px -7px 14px #292c2e;}h1.jsx-4105422955{color:white;font-weight:600;text-shadow:0 0 11px #222426;padding:5px;text-align:center;}.modal.jsx-4105422955{position:fixed;top:0;left:0;right:0;bottom:0;z-index:99999;background:black;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mcmVkeXp6L0RvY3VtZW50cy9DdXJzb3MvUGxhdHppL25leHRKcy9wb2RjYXN0L3BhZ2VzL2NoYW5uZWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0RlLEFBR3dCLEFBV04sQUFLRCxBQVNDLEFBUUcsV0FoQkksQ0FMRSxBQWNMLEdBUVYsR0FqQ2UsR0FrQ2QsT0FSc0IsQUFTckIsRUFsQm9CLE1BbUJuQixHQW5DRSxNQW9DRyxLQW5DSSxPQXlCTixDQVRVLENBb0JMLEdBMUJsQixNQVRvQixDQXlCRCxPQVduQixJQXBCb0IsT0FmcUMsQUF5QnpELFlBVHlELDJDQWY1QyxZQUNVLEFBZXZCLHNCQWRBIiwiZmlsZSI6Ii9Vc2Vycy9mcmVkeXp6L0RvY3VtZW50cy9DdXJzb3MvUGxhdHppL25leHRKcy9wb2RjYXN0L3BhZ2VzL2NoYW5uZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xuaW1wb3J0IEVycm9yIGZyb20gJy4vX2Vycm9yJ1xuaW1wb3J0IFBvZGNhc3RMaXN0IGZyb20gJy4uL2NvbXBvbmVudHMvUG9kY2FzdExpc3QnXG5pbXBvcnQgU2VyaWVzTGlzdCBmcm9tICcuLi9jb21wb25lbnRzL1Nlcmllc0xpc3QnXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0J1xuaW1wb3J0IFBvZGNhc3RQbGF5ZXIgZnJvbSAnLi4vY29tcG9uZW50cy9Qb2RjYXN0UGxheWVyJ1xuXG5jb25zdCBDaGFubmVsID0gKHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlIH0pID0+IHtcblx0Y29uc3QgW29wZW5Qb2RjYXN0LCBzZXRPcGVuUG9kY2FzdF0gPSB1c2VTdGF0ZShudWxsKVxuXG5cdGNvbnN0IG9wZW5Qb2RjYXN0TW9kYWwgPSAoZSwgcG9kY2FzdCkgPT4ge1xuXHRcdGUucHJldmVudERlZmF1bHQoKVxuXHRcdHNldE9wZW5Qb2RjYXN0KHBvZGNhc3QpXG5cdH1cblxuXHRjb25zdCBvbkNsb3NlID0gKGUpID0+IHtcblx0XHRlLnByZXZlbnREZWZhdWx0KClcblx0XHRzZXRPcGVuUG9kY2FzdChudWxsKVxuXHR9XG5cblx0aWYgKHN0YXR1c0NvZGUgIT09IDIwMCkge1xuXHRcdHJldHVybiA8RXJyb3Igc3RhdHVzQ29kZT17c3RhdHVzQ29kZX0gLz5cblx0fVxuXG5cdHJldHVybiAoXG5cdFx0PExheW91dCB0aXRsZT1cIlBvZGNhc3RcIj5cblx0XHRcdDxuYXY+XG5cdFx0XHRcdDxMaW5rIGhyZWY9XCIvXCI+XG5cdFx0XHRcdFx0PGE+Jmx0OyBCYWNrPC9hPlxuXHRcdFx0XHQ8L0xpbms+XG5cdFx0XHQ8L25hdj5cblx0XHRcdDxkaXZcblx0XHRcdFx0Y2xhc3NOYW1lPVwiYmFubmVyXCJcblx0XHRcdFx0c3R5bGU9e3tcblx0XHRcdFx0XHRiYWNrZ3JvdW5kSW1hZ2U6IGB1cmwoJHtjaGFubmVsLnVybHMuYmFubmVyX2ltYWdlLm9yaWdpbmFsfSlgXG5cdFx0XHRcdH19XG5cdFx0XHQ+PC9kaXY+XG5cblx0XHRcdHtvcGVuUG9kY2FzdCAmJiAoXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwibW9kYWxcIj5cblx0XHRcdFx0XHQ8UG9kY2FzdFBsYXllciBhdWRpb0NsaXA9e29wZW5Qb2RjYXN0fSBvbkNsb3NlPXtvbkNsb3NlfSAvPlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdCl9XG5cblx0XHRcdDxoMT57Y2hhbm5lbC50aXRsZX08L2gxPlxuXHRcdFx0PFNlcmllc0xpc3Qgc2VyaWVzPXtzZXJpZXN9IC8+XG5cdFx0XHQ8UG9kY2FzdExpc3Rcblx0XHRcdFx0YXVkaW9DbGlwcz17YXVkaW9DbGlwc31cblx0XHRcdFx0b3BlblBvZGNhc3RNb2RhbD17b3BlblBvZGNhc3RNb2RhbH1cblx0XHRcdC8+XG5cblx0XHRcdDxzdHlsZSBqc3g+e2Bcblx0XHRcdFx0bmF2IHtcblx0XHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdFx0XHRcdHdpZHRoOiA0MHB4O1xuXHRcdFx0XHRcdGJvcmRlci1yYWRpdXM6IDI1JTtcblx0XHRcdFx0XHRiYWNrZ3JvdW5kOiAjMjIyNDI2O1xuXHRcdFx0XHRcdGJveC1zaGFkb3c6IDdweCA3cHggMTRweCAjMWIxYzFlLCAtN3B4IC03cHggMTRweCAjMjkyYzJlO1xuXHRcdFx0XHRcdHBhZGRpbmc6IDhweDtcblx0XHRcdFx0XHRtYXJnaW46IC0yNHB4IDAgMCAzMHB4O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0bmF2IGEge1xuXHRcdFx0XHRcdGNvbG9yOiB3aGl0ZTtcblx0XHRcdFx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQuYmFubmVyIHtcblx0XHRcdFx0XHR3aWR0aDogMTAwJTtcblx0XHRcdFx0XHRwYWRkaW5nLWJvdHRvbTogMjUlO1xuXHRcdFx0XHRcdGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG5cdFx0XHRcdFx0YmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcblx0XHRcdFx0XHRiYWNrZ3JvdW5kOiAjMjIyNDI2O1xuXHRcdFx0XHRcdGJveC1zaGFkb3c6IDdweCA3cHggMTRweCAjMWIxYzFlLCAtN3B4IC03cHggMTRweCAjMjkyYzJlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aDEge1xuXHRcdFx0XHRcdGNvbG9yOiB3aGl0ZTtcblx0XHRcdFx0XHRmb250LXdlaWdodDogNjAwO1xuXHRcdFx0XHRcdHRleHQtc2hhZG93OiAwIDAgMTFweCAjMjIyNDI2O1xuXHRcdFx0XHRcdHBhZGRpbmc6IDVweDtcblx0XHRcdFx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQubW9kYWwge1xuXHRcdFx0XHRcdHBvc2l0aW9uOiBmaXhlZDtcblx0XHRcdFx0XHR0b3A6IDA7XG5cdFx0XHRcdFx0bGVmdDogMDtcblx0XHRcdFx0XHRyaWdodDogMDtcblx0XHRcdFx0XHRib3R0b206IDA7XG5cdFx0XHRcdFx0ei1pbmRleDogOTk5OTk7XG5cdFx0XHRcdFx0YmFja2dyb3VuZDogYmxhY2s7XG5cdFx0XHRcdH1cblx0XHRcdGB9PC9zdHlsZT5cblx0XHQ8L0xheW91dD5cblx0KVxufVxuXG5DaGFubmVsLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jICh7IHF1ZXJ5LCByZXMgfSkgPT4ge1xuXHR0cnkge1xuXHRcdGxldCBpZENoYW5uZWwgPSBxdWVyeS5pZFxuXG5cdFx0bGV0IFtyZXFDaGFubmVsLCByZXFTZXJpZXMsIHJlcUF1ZGlvc10gPSBhd2FpdCBQcm9taXNlLmFsbChbXG5cdFx0XHRmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH1gKSxcblx0XHRcdGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9jaGlsZF9jaGFubmVsc2ApLFxuXHRcdFx0ZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9L2F1ZGlvX2NsaXBzYClcblx0XHRdKVxuXG5cdFx0aWYgKHJlcUNoYW5uZWwuc3RhdHVzID49IDQwNCkge1xuXHRcdFx0cmVzLnN0YXR1c0NvZGUgPSByZXFDaGFubmVsLnN0YXR1c1xuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0Y2hhbm5lbDogbnVsbCxcblx0XHRcdFx0YXVkaW9DbGlwczogbnVsbCxcblx0XHRcdFx0c2VyaWVzOiBudWxsLFxuXHRcdFx0XHRzdGF0dXNDb2RlOiByZXFDaGFubmVsLnN0YXR1c1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIGdldHRpbmcgY2hhbm5lbCBkYXRhXG5cdFx0bGV0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKClcblx0XHRsZXQgY2hhbm5lbCA9IGRhdGFDaGFubmVsLmJvZHkuY2hhbm5lbFxuXHRcdC8vIGdldHRpbmcgYXVkaW9zIGRhdGFcblx0XHRsZXQgZGF0YUF1ZGlvcyA9IGF3YWl0IHJlcUF1ZGlvcy5qc29uKClcblx0XHRsZXQgYXVkaW9DbGlwcyA9IGRhdGFBdWRpb3MuYm9keS5hdWRpb19jbGlwc1xuXHRcdC8vIGdldHRpbmcgY2hpbGVkIGNoYW5uZWxzIGRhdGFcblx0XHRsZXQgZGF0YVNlcmllcyA9IGF3YWl0IHJlcVNlcmllcy5qc29uKClcblx0XHRsZXQgc2VyaWVzID0gZGF0YVNlcmllcy5ib2R5LmNoYW5uZWxzXG5cblx0XHRyZXR1cm4geyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMsIHN0YXR1c0NvZGU6IDIwMCB9XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdHJlcy5zdGF0dXNDb2RlID0gNTAzXG5cdFx0cmV0dXJuIHsgY2hhbm5lbDogbnVsbCwgYXVkaW9DbGlwczogbnVsbCwgc2VyaWVzOiBudWxsLCBzdGF0dXNDb2RlOiA1MDMgfVxuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENoYW5uZWxcbiJdfQ== */\\n/*@ sourceURL=/Users/fredyzz/Documents/Cursos/Platzi/nextJs/podcast/pages/channel.js */\"));\n};\n\n_s(Channel, \"pEhj3SwlPLKnCzInCkhwZ80CvFI=\");\n\n_c = Channel;\n\nChannel.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, res, idChannel, _yield$Promise$all, _yield$Promise$all2, reqChannel, reqSeries, reqAudios, dataChannel, channel, dataAudios, audioClips, dataSeries, series;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query, res = _ref2.res;\n            _context.prev = 1;\n            idChannel = query.id;\n            _context.next = 5;\n            return Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/child_channels\")), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips\"))]);\n\n          case 5:\n            _yield$Promise$all = _context.sent;\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n            reqChannel = _yield$Promise$all2[0];\n            reqSeries = _yield$Promise$all2[1];\n            reqAudios = _yield$Promise$all2[2];\n\n            if (!(reqChannel.status >= 404)) {\n              _context.next = 13;\n              break;\n            }\n\n            res.statusCode = reqChannel.status;\n            return _context.abrupt(\"return\", {\n              channel: null,\n              audioClips: null,\n              series: null,\n              statusCode: reqChannel.status\n            });\n\n          case 13:\n            _context.next = 15;\n            return reqChannel.json();\n\n          case 15:\n            dataChannel = _context.sent;\n            channel = dataChannel.body.channel; // getting audios data\n\n            _context.next = 19;\n            return reqAudios.json();\n\n          case 19:\n            dataAudios = _context.sent;\n            audioClips = dataAudios.body.audio_clips; // getting chiled channels data\n\n            _context.next = 23;\n            return reqSeries.json();\n\n          case 23:\n            dataSeries = _context.sent;\n            series = dataSeries.body.channels;\n            return _context.abrupt(\"return\", {\n              channel: channel,\n              audioClips: audioClips,\n              series: series,\n              statusCode: 200\n            });\n\n          case 28:\n            _context.prev = 28;\n            _context.t0 = _context[\"catch\"](1);\n            res.statusCode = 503;\n            return _context.abrupt(\"return\", {\n              channel: null,\n              audioClips: null,\n              series: null,\n              statusCode: 503\n            });\n\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 28]]);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Channel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Channel\");","map":{"version":3,"sources":["/Users/fredyzz/Documents/Cursos/Platzi/nextJs/podcast/pages/channel.js"],"names":["useState","Link","Error","PodcastList","SeriesList","Layout","PodcastPlayer","Channel","channel","audioClips","series","statusCode","openPodcast","setOpenPodcast","openPodcastModal","e","podcast","preventDefault","onClose","backgroundImage","urls","banner_image","original","title","getInitialProps","query","res","idChannel","id","Promise","all","fetch","reqChannel","reqSeries","reqAudios","status","json","dataChannel","body","dataAudios","audio_clips","dataSeries","channels"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport Link from 'next/link'\nimport Error from './_error'\nimport PodcastList from '../components/PodcastList'\nimport SeriesList from '../components/SeriesList'\nimport Layout from '../components/Layout'\nimport PodcastPlayer from '../components/PodcastPlayer'\n\nconst Channel = ({ channel, audioClips, series, statusCode }) => {\n\tconst [openPodcast, setOpenPodcast] = useState(null)\n\n\tconst openPodcastModal = (e, podcast) => {\n\t\te.preventDefault()\n\t\tsetOpenPodcast(podcast)\n\t}\n\n\tconst onClose = (e) => {\n\t\te.preventDefault()\n\t\tsetOpenPodcast(null)\n\t}\n\n\tif (statusCode !== 200) {\n\t\treturn <Error statusCode={statusCode} />\n\t}\n\n\treturn (\n\t\t<Layout title=\"Podcast\">\n\t\t\t<nav>\n\t\t\t\t<Link href=\"/\">\n\t\t\t\t\t<a>&lt; Back</a>\n\t\t\t\t</Link>\n\t\t\t</nav>\n\t\t\t<div\n\t\t\t\tclassName=\"banner\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundImage: `url(${channel.urls.banner_image.original})`\n\t\t\t\t}}\n\t\t\t></div>\n\n\t\t\t{openPodcast && (\n\t\t\t\t<div className=\"modal\">\n\t\t\t\t\t<PodcastPlayer audioClip={openPodcast} onClose={onClose} />\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<h1>{channel.title}</h1>\n\t\t\t<SeriesList series={series} />\n\t\t\t<PodcastList\n\t\t\t\taudioClips={audioClips}\n\t\t\t\topenPodcastModal={openPodcastModal}\n\t\t\t/>\n\n\t\t\t<style jsx>{`\n\t\t\t\tnav {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\twidth: 40px;\n\t\t\t\t\tborder-radius: 25%;\n\t\t\t\t\tbackground: #222426;\n\t\t\t\t\tbox-shadow: 7px 7px 14px #1b1c1e, -7px -7px 14px #292c2e;\n\t\t\t\t\tpadding: 8px;\n\t\t\t\t\tmargin: -24px 0 0 30px;\n\t\t\t\t}\n\n\t\t\t\tnav a {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\ttext-decoration: none;\n\t\t\t\t}\n\n\t\t\t\t.banner {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tpadding-bottom: 25%;\n\t\t\t\t\tbackground-position: 50% 50%;\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t\tbackground: #222426;\n\t\t\t\t\tbox-shadow: 7px 7px 14px #1b1c1e, -7px -7px 14px #292c2e;\n\t\t\t\t}\n\n\t\t\t\th1 {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\ttext-shadow: 0 0 11px #222426;\n\t\t\t\t\tpadding: 5px;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t}\n\n\t\t\t\t.modal {\n\t\t\t\t\tposition: fixed;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tz-index: 99999;\n\t\t\t\t\tbackground: black;\n\t\t\t\t}\n\t\t\t`}</style>\n\t\t</Layout>\n\t)\n}\n\nChannel.getInitialProps = async ({ query, res }) => {\n\ttry {\n\t\tlet idChannel = query.id\n\n\t\tlet [reqChannel, reqSeries, reqAudios] = await Promise.all([\n\t\t\tfetch(`https://api.audioboom.com/channels/${idChannel}`),\n\t\t\tfetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n\t\t\tfetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n\t\t])\n\n\t\tif (reqChannel.status >= 404) {\n\t\t\tres.statusCode = reqChannel.status\n\t\t\treturn {\n\t\t\t\tchannel: null,\n\t\t\t\taudioClips: null,\n\t\t\t\tseries: null,\n\t\t\t\tstatusCode: reqChannel.status\n\t\t\t}\n\t\t}\n\n\t\t// getting channel data\n\t\tlet dataChannel = await reqChannel.json()\n\t\tlet channel = dataChannel.body.channel\n\t\t// getting audios data\n\t\tlet dataAudios = await reqAudios.json()\n\t\tlet audioClips = dataAudios.body.audio_clips\n\t\t// getting chiled channels data\n\t\tlet dataSeries = await reqSeries.json()\n\t\tlet series = dataSeries.body.channels\n\n\t\treturn { channel, audioClips, series, statusCode: 200 }\n\t} catch (err) {\n\t\tres.statusCode = 503\n\t\treturn { channel: null, audioClips: null, series: null, statusCode: 503 }\n\t}\n}\n\nexport default Channel\n"]},"metadata":{},"sourceType":"module"}