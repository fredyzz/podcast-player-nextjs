{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport Error from './_error';\nimport PodcastList from '../components/PodcastList';\nimport SeriesList from '../components/SeriesList';\nimport Layout from '../components/Layout';\nimport PodcastPlayer from '../components/PodcastPlayer';\n\nvar Channel = function Channel(_ref) {\n  _s();\n\n  var channel = _ref.channel,\n      audioClips = _ref.audioClips,\n      series = _ref.series,\n      statusCode = _ref.statusCode;\n\n  var _useState = useState(null),\n      openPodcast = _useState[0],\n      setOpenPodcast = _useState[1];\n\n  var openPodcastModal = function openPodcastModal(e, podcast) {\n    e.preventDefault();\n    setOpenPodcast(podcast);\n  };\n\n  var onClose = function onClose(e) {\n    e.preventDefault();\n    setOpenPodcast(null);\n  };\n\n  if (statusCode !== 200) {\n    return __jsx(Error, {\n      statusCode: statusCode\n    });\n  }\n\n  return __jsx(Layout, {\n    title: \"Podcast \".concat(channel.title)\n  }, __jsx(\"nav\", {\n    className: \"jsx-2220837964\"\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    className: \"jsx-2220837964\"\n  }, \"Volver\"))), __jsx(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(channel.urls.banner_image.original, \")\")\n    },\n    className: \"jsx-2220837964\" + \" \" + \"banner\"\n  }), openPodcast && __jsx(\"div\", {\n    className: \"jsx-2220837964\" + \" \" + \"modal\"\n  }, __jsx(PodcastPlayer, {\n    audioClip: openPodcast,\n    onClose: onClose\n  })), __jsx(\"h1\", {\n    className: \"jsx-2220837964\"\n  }, channel.title), __jsx(SeriesList, {\n    series: series\n  }), __jsx(PodcastList, {\n    audioClips: audioClips,\n    openPodcastModal: openPodcastModal\n  }), __jsx(_JSXStyle, {\n    id: \"2220837964\"\n  }, \"nav.jsx-2220837964{position:absolute;display:inline-block;border-radius:25%;background:#222426;box-shadow:7px 7px 14px #1b1c1e,-7px -7px 14px #292c2e;padding:8px;margin:10px;}nav.jsx-2220837964 a.jsx-2220837964{color:white;-webkit-text-decoration:none;text-decoration:none;}.banner.jsx-2220837964{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background:#222426;box-shadow:7px 7px 14px #1b1c1e,-7px -7px 14px #292c2e;}h1.jsx-2220837964{color:white;font-weight:600;text-shadow:0 0 11px #222426;padding:5px;text-align:center;}.modal.jsx-2220837964{position:fixed;top:0;left:0;right:0;bottom:0;z-index:99999;background:black;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mcmVkeXp6L0RvY3VtZW50cy9DdXJzb3MvUGxhdHppL25leHRKcy9wb2RjYXN0L3BhZ2VzL2NoYW5uZWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0RlLEFBR3dCLEFBVU4sQUFLRCxBQVNDLEFBUUcsV0FoQkksQ0FMRSxBQWNMLEdBUVYsR0FoQ2UsR0FpQ2QsT0FSc0IsQUFTckIsRUFsQm9CLE1BbUJuQixHQWxDUyxNQW1DSixZQWxDSyxBQXdCUCxDQVRVLENBb0JMLEdBMUJsQixPQWdCbUIsT0F4QnNDLEFBbUN6RCxJQXBCb0IsT0FVcEIsWUFUeUQsZ0NBZjVDLFlBQ0EsV0FlYixDQWRBIiwiZmlsZSI6Ii9Vc2Vycy9mcmVkeXp6L0RvY3VtZW50cy9DdXJzb3MvUGxhdHppL25leHRKcy9wb2RjYXN0L3BhZ2VzL2NoYW5uZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xuaW1wb3J0IEVycm9yIGZyb20gJy4vX2Vycm9yJ1xuaW1wb3J0IFBvZGNhc3RMaXN0IGZyb20gJy4uL2NvbXBvbmVudHMvUG9kY2FzdExpc3QnXG5pbXBvcnQgU2VyaWVzTGlzdCBmcm9tICcuLi9jb21wb25lbnRzL1Nlcmllc0xpc3QnXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0J1xuaW1wb3J0IFBvZGNhc3RQbGF5ZXIgZnJvbSAnLi4vY29tcG9uZW50cy9Qb2RjYXN0UGxheWVyJ1xuXG5jb25zdCBDaGFubmVsID0gKHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlIH0pID0+IHtcblx0Y29uc3QgW29wZW5Qb2RjYXN0LCBzZXRPcGVuUG9kY2FzdF0gPSB1c2VTdGF0ZShudWxsKVxuXG5cdGNvbnN0IG9wZW5Qb2RjYXN0TW9kYWwgPSAoZSwgcG9kY2FzdCkgPT4ge1xuXHRcdGUucHJldmVudERlZmF1bHQoKVxuXHRcdHNldE9wZW5Qb2RjYXN0KHBvZGNhc3QpXG5cdH1cblxuXHRjb25zdCBvbkNsb3NlID0gKGUpID0+IHtcblx0XHRlLnByZXZlbnREZWZhdWx0KClcblx0XHRzZXRPcGVuUG9kY2FzdChudWxsKVxuXHR9XG5cblx0aWYgKHN0YXR1c0NvZGUgIT09IDIwMCkge1xuXHRcdHJldHVybiA8RXJyb3Igc3RhdHVzQ29kZT17c3RhdHVzQ29kZX0gLz5cblx0fVxuXG5cdHJldHVybiAoXG5cdFx0PExheW91dCB0aXRsZT17YFBvZGNhc3QgJHtjaGFubmVsLnRpdGxlfWB9PlxuXHRcdFx0PG5hdj5cblx0XHRcdFx0PExpbmsgaHJlZj1cIi9cIj5cblx0XHRcdFx0XHQ8YT5Wb2x2ZXI8L2E+XG5cdFx0XHRcdDwvTGluaz5cblx0XHRcdDwvbmF2PlxuXHRcdFx0PGRpdlxuXHRcdFx0XHRjbGFzc05hbWU9XCJiYW5uZXJcIlxuXHRcdFx0XHRzdHlsZT17e1xuXHRcdFx0XHRcdGJhY2tncm91bmRJbWFnZTogYHVybCgke2NoYW5uZWwudXJscy5iYW5uZXJfaW1hZ2Uub3JpZ2luYWx9KWBcblx0XHRcdFx0fX1cblx0XHRcdD48L2Rpdj5cblxuXHRcdFx0e29wZW5Qb2RjYXN0ICYmIChcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJtb2RhbFwiPlxuXHRcdFx0XHRcdDxQb2RjYXN0UGxheWVyIGF1ZGlvQ2xpcD17b3BlblBvZGNhc3R9IG9uQ2xvc2U9e29uQ2xvc2V9IC8+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0KX1cblxuXHRcdFx0PGgxPntjaGFubmVsLnRpdGxlfTwvaDE+XG5cdFx0XHQ8U2VyaWVzTGlzdCBzZXJpZXM9e3Nlcmllc30gLz5cblx0XHRcdDxQb2RjYXN0TGlzdFxuXHRcdFx0XHRhdWRpb0NsaXBzPXthdWRpb0NsaXBzfVxuXHRcdFx0XHRvcGVuUG9kY2FzdE1vZGFsPXtvcGVuUG9kY2FzdE1vZGFsfVxuXHRcdFx0Lz5cblxuXHRcdFx0PHN0eWxlIGpzeD57YFxuXHRcdFx0XHRuYXYge1xuXHRcdFx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0XHRcdFx0Ym9yZGVyLXJhZGl1czogMjUlO1xuXHRcdFx0XHRcdGJhY2tncm91bmQ6ICMyMjI0MjY7XG5cdFx0XHRcdFx0Ym94LXNoYWRvdzogN3B4IDdweCAxNHB4ICMxYjFjMWUsIC03cHggLTdweCAxNHB4ICMyOTJjMmU7XG5cdFx0XHRcdFx0cGFkZGluZzogOHB4O1xuXHRcdFx0XHRcdG1hcmdpbjogMTBweDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdG5hdiBhIHtcblx0XHRcdFx0XHRjb2xvcjogd2hpdGU7XG5cdFx0XHRcdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0LmJhbm5lciB7XG5cdFx0XHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0XHRcdFx0cGFkZGluZy1ib3R0b206IDI1JTtcblx0XHRcdFx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuXHRcdFx0XHRcdGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cdFx0XHRcdFx0YmFja2dyb3VuZDogIzIyMjQyNjtcblx0XHRcdFx0XHRib3gtc2hhZG93OiA3cHggN3B4IDE0cHggIzFiMWMxZSwgLTdweCAtN3B4IDE0cHggIzI5MmMyZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGgxIHtcblx0XHRcdFx0XHRjb2xvcjogd2hpdGU7XG5cdFx0XHRcdFx0Zm9udC13ZWlnaHQ6IDYwMDtcblx0XHRcdFx0XHR0ZXh0LXNoYWRvdzogMCAwIDExcHggIzIyMjQyNjtcblx0XHRcdFx0XHRwYWRkaW5nOiA1cHg7XG5cdFx0XHRcdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Lm1vZGFsIHtcblx0XHRcdFx0XHRwb3NpdGlvbjogZml4ZWQ7XG5cdFx0XHRcdFx0dG9wOiAwO1xuXHRcdFx0XHRcdGxlZnQ6IDA7XG5cdFx0XHRcdFx0cmlnaHQ6IDA7XG5cdFx0XHRcdFx0Ym90dG9tOiAwO1xuXHRcdFx0XHRcdHotaW5kZXg6IDk5OTk5O1xuXHRcdFx0XHRcdGJhY2tncm91bmQ6IGJsYWNrO1xuXHRcdFx0XHR9XG5cdFx0XHRgfTwvc3R5bGU+XG5cdFx0PC9MYXlvdXQ+XG5cdClcbn1cblxuQ2hhbm5lbC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoeyBxdWVyeSwgcmVzIH0pID0+IHtcblx0dHJ5IHtcblx0XHRsZXQgaWRDaGFubmVsID0gcXVlcnkuaWRcblxuXHRcdGxldCBbcmVxQ2hhbm5lbCwgcmVxU2VyaWVzLCByZXFBdWRpb3NdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuXHRcdFx0ZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9YCksXG5cdFx0XHRmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vY2hpbGRfY2hhbm5lbHNgKSxcblx0XHRcdGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9hdWRpb19jbGlwc2ApXG5cdFx0XSlcblxuXHRcdGlmIChyZXFDaGFubmVsLnN0YXR1cyA+PSA0MDQpIHtcblx0XHRcdHJlcy5zdGF0dXNDb2RlID0gcmVxQ2hhbm5lbC5zdGF0dXNcblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdGNoYW5uZWw6IG51bGwsXG5cdFx0XHRcdGF1ZGlvQ2xpcHM6IG51bGwsXG5cdFx0XHRcdHNlcmllczogbnVsbCxcblx0XHRcdFx0c3RhdHVzQ29kZTogcmVxQ2hhbm5lbC5zdGF0dXNcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBnZXR0aW5nIGNoYW5uZWwgZGF0YVxuXHRcdGxldCBkYXRhQ2hhbm5lbCA9IGF3YWl0IHJlcUNoYW5uZWwuanNvbigpXG5cdFx0bGV0IGNoYW5uZWwgPSBkYXRhQ2hhbm5lbC5ib2R5LmNoYW5uZWxcblx0XHQvLyBnZXR0aW5nIGF1ZGlvcyBkYXRhXG5cdFx0bGV0IGRhdGFBdWRpb3MgPSBhd2FpdCByZXFBdWRpb3MuanNvbigpXG5cdFx0bGV0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHNcblx0XHQvLyBnZXR0aW5nIGNoaWxlZCBjaGFubmVscyBkYXRhXG5cdFx0bGV0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpXG5cdFx0bGV0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVsc1xuXG5cdFx0cmV0dXJuIHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlOiAyMDAgfVxuXHR9IGNhdGNoIChlcnIpIHtcblx0XHRyZXMuc3RhdHVzQ29kZSA9IDUwM1xuXHRcdHJldHVybiB7IGNoYW5uZWw6IG51bGwsIGF1ZGlvQ2xpcHM6IG51bGwsIHNlcmllczogbnVsbCwgc3RhdHVzQ29kZTogNTAzIH1cblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBDaGFubmVsXG4iXX0= */\\n/*@ sourceURL=/Users/fredyzz/Documents/Cursos/Platzi/nextJs/podcast/pages/channel.js */\"));\n};\n\n_s(Channel, \"pEhj3SwlPLKnCzInCkhwZ80CvFI=\");\n\n_c = Channel;\n\nChannel.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, res, idChannel, _yield$Promise$all, _yield$Promise$all2, reqChannel, reqSeries, reqAudios, dataChannel, channel, dataAudios, audioClips, dataSeries, series;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query, res = _ref2.res;\n            _context.prev = 1;\n            idChannel = query.id;\n            _context.next = 5;\n            return Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/child_channels\")), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips\"))]);\n\n          case 5:\n            _yield$Promise$all = _context.sent;\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n            reqChannel = _yield$Promise$all2[0];\n            reqSeries = _yield$Promise$all2[1];\n            reqAudios = _yield$Promise$all2[2];\n\n            if (!(reqChannel.status >= 404)) {\n              _context.next = 13;\n              break;\n            }\n\n            res.statusCode = reqChannel.status;\n            return _context.abrupt(\"return\", {\n              channel: null,\n              audioClips: null,\n              series: null,\n              statusCode: reqChannel.status\n            });\n\n          case 13:\n            _context.next = 15;\n            return reqChannel.json();\n\n          case 15:\n            dataChannel = _context.sent;\n            channel = dataChannel.body.channel; // getting audios data\n\n            _context.next = 19;\n            return reqAudios.json();\n\n          case 19:\n            dataAudios = _context.sent;\n            audioClips = dataAudios.body.audio_clips; // getting chiled channels data\n\n            _context.next = 23;\n            return reqSeries.json();\n\n          case 23:\n            dataSeries = _context.sent;\n            series = dataSeries.body.channels;\n            return _context.abrupt(\"return\", {\n              channel: channel,\n              audioClips: audioClips,\n              series: series,\n              statusCode: 200\n            });\n\n          case 28:\n            _context.prev = 28;\n            _context.t0 = _context[\"catch\"](1);\n            res.statusCode = 503;\n            return _context.abrupt(\"return\", {\n              channel: null,\n              audioClips: null,\n              series: null,\n              statusCode: 503\n            });\n\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 28]]);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Channel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Channel\");","map":{"version":3,"sources":["/Users/fredyzz/Documents/Cursos/Platzi/nextJs/podcast/pages/channel.js"],"names":["useState","Link","Error","PodcastList","SeriesList","Layout","PodcastPlayer","Channel","channel","audioClips","series","statusCode","openPodcast","setOpenPodcast","openPodcastModal","e","podcast","preventDefault","onClose","title","backgroundImage","urls","banner_image","original","getInitialProps","query","res","idChannel","id","Promise","all","fetch","reqChannel","reqSeries","reqAudios","status","json","dataChannel","body","dataAudios","audio_clips","dataSeries","channels"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport Link from 'next/link'\nimport Error from './_error'\nimport PodcastList from '../components/PodcastList'\nimport SeriesList from '../components/SeriesList'\nimport Layout from '../components/Layout'\nimport PodcastPlayer from '../components/PodcastPlayer'\n\nconst Channel = ({ channel, audioClips, series, statusCode }) => {\n\tconst [openPodcast, setOpenPodcast] = useState(null)\n\n\tconst openPodcastModal = (e, podcast) => {\n\t\te.preventDefault()\n\t\tsetOpenPodcast(podcast)\n\t}\n\n\tconst onClose = (e) => {\n\t\te.preventDefault()\n\t\tsetOpenPodcast(null)\n\t}\n\n\tif (statusCode !== 200) {\n\t\treturn <Error statusCode={statusCode} />\n\t}\n\n\treturn (\n\t\t<Layout title={`Podcast ${channel.title}`}>\n\t\t\t<nav>\n\t\t\t\t<Link href=\"/\">\n\t\t\t\t\t<a>Volver</a>\n\t\t\t\t</Link>\n\t\t\t</nav>\n\t\t\t<div\n\t\t\t\tclassName=\"banner\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundImage: `url(${channel.urls.banner_image.original})`\n\t\t\t\t}}\n\t\t\t></div>\n\n\t\t\t{openPodcast && (\n\t\t\t\t<div className=\"modal\">\n\t\t\t\t\t<PodcastPlayer audioClip={openPodcast} onClose={onClose} />\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<h1>{channel.title}</h1>\n\t\t\t<SeriesList series={series} />\n\t\t\t<PodcastList\n\t\t\t\taudioClips={audioClips}\n\t\t\t\topenPodcastModal={openPodcastModal}\n\t\t\t/>\n\n\t\t\t<style jsx>{`\n\t\t\t\tnav {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\tborder-radius: 25%;\n\t\t\t\t\tbackground: #222426;\n\t\t\t\t\tbox-shadow: 7px 7px 14px #1b1c1e, -7px -7px 14px #292c2e;\n\t\t\t\t\tpadding: 8px;\n\t\t\t\t\tmargin: 10px;\n\t\t\t\t}\n\n\t\t\t\tnav a {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\ttext-decoration: none;\n\t\t\t\t}\n\n\t\t\t\t.banner {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tpadding-bottom: 25%;\n\t\t\t\t\tbackground-position: 50% 50%;\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t\tbackground: #222426;\n\t\t\t\t\tbox-shadow: 7px 7px 14px #1b1c1e, -7px -7px 14px #292c2e;\n\t\t\t\t}\n\n\t\t\t\th1 {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\ttext-shadow: 0 0 11px #222426;\n\t\t\t\t\tpadding: 5px;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t}\n\n\t\t\t\t.modal {\n\t\t\t\t\tposition: fixed;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tz-index: 99999;\n\t\t\t\t\tbackground: black;\n\t\t\t\t}\n\t\t\t`}</style>\n\t\t</Layout>\n\t)\n}\n\nChannel.getInitialProps = async ({ query, res }) => {\n\ttry {\n\t\tlet idChannel = query.id\n\n\t\tlet [reqChannel, reqSeries, reqAudios] = await Promise.all([\n\t\t\tfetch(`https://api.audioboom.com/channels/${idChannel}`),\n\t\t\tfetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n\t\t\tfetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n\t\t])\n\n\t\tif (reqChannel.status >= 404) {\n\t\t\tres.statusCode = reqChannel.status\n\t\t\treturn {\n\t\t\t\tchannel: null,\n\t\t\t\taudioClips: null,\n\t\t\t\tseries: null,\n\t\t\t\tstatusCode: reqChannel.status\n\t\t\t}\n\t\t}\n\n\t\t// getting channel data\n\t\tlet dataChannel = await reqChannel.json()\n\t\tlet channel = dataChannel.body.channel\n\t\t// getting audios data\n\t\tlet dataAudios = await reqAudios.json()\n\t\tlet audioClips = dataAudios.body.audio_clips\n\t\t// getting chiled channels data\n\t\tlet dataSeries = await reqSeries.json()\n\t\tlet series = dataSeries.body.channels\n\n\t\treturn { channel, audioClips, series, statusCode: 200 }\n\t} catch (err) {\n\t\tres.statusCode = 503\n\t\treturn { channel: null, audioClips: null, series: null, statusCode: 503 }\n\t}\n}\n\nexport default Channel\n"]},"metadata":{},"sourceType":"module"}