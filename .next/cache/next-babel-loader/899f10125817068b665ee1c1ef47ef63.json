{"ast":null,"code":"var _jsxFileName = \"/Users/fredyzz/Documents/Cursos/Platzi/nextJs/podcast/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Error from 'next/error';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nexport default class extends React.Component {\n  static async getInitialProps() {\n    try {\n      let req = await fetch('https://api.audioboom.com/channels/recommended');\n      let {\n        body: channels\n      } = await req.json();\n      return {\n        channels,\n        statusCode: 200\n      };\n    } catch (err) {\n      return {\n        channels: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channels,\n      statusCode\n    } = this.props;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      });\n    }\n\n    return __jsx(Layout, {\n      title: \"Podcasts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 4\n      }\n    }, __jsx(ChannelGrid, {\n      channels: channels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/fredyzz/Documents/Cursos/Platzi/nextJs/podcast/pages/index.js"],"names":["Error","Layout","ChannelGrid","React","Component","getInitialProps","req","fetch","body","channels","json","statusCode","err","render","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,cAAcC,KAAK,CAACC,SAApB,CAA8B;AAC5C,eAAaC,eAAb,GAA+B;AAC9B,QAAI;AACH,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,gDAAD,CAArB;AACA,UAAI;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAAqB,MAAMH,GAAG,CAACI,IAAJ,EAA/B;AACA,aAAO;AAAED,QAAAA,QAAF;AAAYE,QAAAA,UAAU,EAAE;AAAxB,OAAP;AACA,KAJD,CAIE,OAAOC,GAAP,EAAY;AACb,aAAO;AAAEH,QAAAA,QAAQ,EAAE,IAAZ;AAAkBE,QAAAA,UAAU,EAAE;AAA9B,OAAP;AACA;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEJ,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,QAA2B,KAAKG,KAAtC;;AAEA,QAAIH,UAAU,KAAK,GAAnB,EAAwB;AACvB,aAAO,MAAC,KAAD;AAAO,QAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;AAED,WACC,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,WAAD;AAAa,MAAA,QAAQ,EAAEF,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AAKA;;AAvB2C","sourcesContent":["import Error from 'next/error'\nimport Layout from '../components/Layout'\nimport ChannelGrid from '../components/ChannelGrid'\n\nexport default class extends React.Component {\n\tstatic async getInitialProps() {\n\t\ttry {\n\t\t\tlet req = await fetch('https://api.audioboom.com/channels/recommended')\n\t\t\tlet { body: channels } = await req.json()\n\t\t\treturn { channels, statusCode: 200 }\n\t\t} catch (err) {\n\t\t\treturn { channels: null, statusCode: 503 }\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { channels, statusCode } = this.props\n\n\t\tif (statusCode !== 200) {\n\t\t\treturn <Error statusCode={statusCode} />\n\t\t}\n\n\t\treturn (\n\t\t\t<Layout title=\"Podcasts\">\n\t\t\t\t<ChannelGrid channels={channels} />\n\t\t\t</Layout>\n\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}