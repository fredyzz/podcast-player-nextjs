{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/fredyzz/Documents/Cursos/Platzi/nextJs/podcast/pages/channel.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Error from './_error';\nimport PodcastList from '../components/PodcastList';\nimport SeriesList from '../components/SeriesList';\nimport Layout from '../components/Layout';\n\nvar Channel = function Channel(_ref) {\n  var channel = _ref.channel,\n      audioClips = _ref.audioClips,\n      series = _ref.series,\n      statusCode = _ref.statusCode;\n\n  if (statusCode !== 200) {\n    return __jsx(Error, {\n      statusCode: statusCode,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    title: \"Podcast \".concat(channel.title),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, __jsx(\"nav\", {\n    className: \"jsx-399256522\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    className: \"jsx-399256522\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 6\n    }\n  }, \"Volver\"))), __jsx(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(channel.urls.banner_image.original, \")\")\n    },\n    className: \"jsx-399256522\" + \" \" + \"banner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }\n  }), __jsx(\"h1\", {\n    className: \"jsx-399256522\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, channel.title), __jsx(SeriesList, {\n    series: series,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }), __jsx(PodcastList, {\n    audioClips: audioClips,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"399256522\",\n    __self: _this\n  }, \"nav.jsx-399256522{position:absolute;display:inline-block;border-radius:25%;background:#ffffff;box-shadow:20px 20px 60px #d9d9d9,-20px -20px 60px #ffffff;padding:8px;margin:10px;}nav.jsx-399256522 a.jsx-399256522{color:black;-webkit-text-decoration:none;text-decoration:none;}.banner.jsx-399256522{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;box-shadow:20px 20px 60px #d9d9d9,-20px -20px 60px #ffffff;}h1.jsx-399256522{font-weight:600;text-shadow:0 0 11px #ffffff;background:rgba(255,255,255,0.3);padding:5px;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mcmVkeXp6L0RvY3VtZW50cy9DdXJzb3MvUGxhdHppL25leHRKcy9wb2RjYXN0L3BhZ2VzL2NoYW5uZWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEJlLEFBR3dCLEFBVU4sQUFLRCxBQVNLLFdBUkcsQ0FMRSxJQWNRLEVBeEJSLFlBZ0JPLFNBZlYsTUF3QmtCLFlBdkJqQixDQWVHLElBTnZCLGNBUjZELEVBdUJoRCxFQVJVLFVBU0osWUFSMEMsTUFTN0QsMkJBeEJhLFlBQ0EsWUFDYixFQWNBIiwiZmlsZSI6Ii9Vc2Vycy9mcmVkeXp6L0RvY3VtZW50cy9DdXJzb3MvUGxhdHppL25leHRKcy9wb2RjYXN0L3BhZ2VzL2NoYW5uZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG5pbXBvcnQgRXJyb3IgZnJvbSAnLi9fZXJyb3InXG5pbXBvcnQgUG9kY2FzdExpc3QgZnJvbSAnLi4vY29tcG9uZW50cy9Qb2RjYXN0TGlzdCdcbmltcG9ydCBTZXJpZXNMaXN0IGZyb20gJy4uL2NvbXBvbmVudHMvU2VyaWVzTGlzdCdcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnXG5cbmNvbnN0IENoYW5uZWwgPSAoeyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMsIHN0YXR1c0NvZGUgfSkgPT4ge1xuXHRpZiAoc3RhdHVzQ29kZSAhPT0gMjAwKSB7XG5cdFx0cmV0dXJuIDxFcnJvciBzdGF0dXNDb2RlPXtzdGF0dXNDb2RlfSAvPlxuXHR9XG5cblx0cmV0dXJuIChcblx0XHQ8TGF5b3V0IHRpdGxlPXtgUG9kY2FzdCAke2NoYW5uZWwudGl0bGV9YH0+XG5cdFx0XHQ8bmF2PlxuXHRcdFx0XHQ8TGluayBocmVmPVwiL1wiPlxuXHRcdFx0XHRcdDxhPlZvbHZlcjwvYT5cblx0XHRcdFx0PC9MaW5rPlxuXHRcdFx0PC9uYXY+XG5cdFx0XHQ8ZGl2XG5cdFx0XHRcdGNsYXNzTmFtZT1cImJhbm5lclwiXG5cdFx0XHRcdHN0eWxlPXt7XG5cdFx0XHRcdFx0YmFja2dyb3VuZEltYWdlOiBgdXJsKCR7Y2hhbm5lbC51cmxzLmJhbm5lcl9pbWFnZS5vcmlnaW5hbH0pYFxuXHRcdFx0XHR9fVxuXHRcdFx0PjwvZGl2PlxuXHRcdFx0PGgxPntjaGFubmVsLnRpdGxlfTwvaDE+XG5cdFx0XHQ8U2VyaWVzTGlzdCBzZXJpZXM9e3Nlcmllc30gLz5cblx0XHRcdDxQb2RjYXN0TGlzdCBhdWRpb0NsaXBzPXthdWRpb0NsaXBzfSAvPlxuXG5cdFx0XHQ8c3R5bGUganN4PntgXG5cdFx0XHRcdG5hdiB7XG5cdFx0XHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRcdFx0XHRib3JkZXItcmFkaXVzOiAyNSU7XG5cdFx0XHRcdFx0YmFja2dyb3VuZDogI2ZmZmZmZjtcblx0XHRcdFx0XHRib3gtc2hhZG93OiAyMHB4IDIwcHggNjBweCAjZDlkOWQ5LCAtMjBweCAtMjBweCA2MHB4ICNmZmZmZmY7XG5cdFx0XHRcdFx0cGFkZGluZzogOHB4O1xuXHRcdFx0XHRcdG1hcmdpbjogMTBweDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdG5hdiBhIHtcblx0XHRcdFx0XHRjb2xvcjogYmxhY2s7XG5cdFx0XHRcdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0LmJhbm5lciB7XG5cdFx0XHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0XHRcdFx0cGFkZGluZy1ib3R0b206IDI1JTtcblx0XHRcdFx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuXHRcdFx0XHRcdGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cdFx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogI2FhYTtcblx0XHRcdFx0XHRib3gtc2hhZG93OiAyMHB4IDIwcHggNjBweCAjZDlkOWQ5LCAtMjBweCAtMjBweCA2MHB4ICNmZmZmZmY7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRoMSB7XG5cdFx0XHRcdFx0Zm9udC13ZWlnaHQ6IDYwMDtcblx0XHRcdFx0XHR0ZXh0LXNoYWRvdzogMCAwIDExcHggI2ZmZmZmZjtcblx0XHRcdFx0XHRiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XG5cdFx0XHRcdFx0cGFkZGluZzogNXB4O1xuXHRcdFx0XHRcdHRleHQtYWxpZ246IGNlbnRlcjtcblx0XHRcdFx0fVxuXHRcdFx0YH08L3N0eWxlPlxuXHRcdDwvTGF5b3V0PlxuXHQpXG59XG5cbkNoYW5uZWwuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgKHsgcXVlcnksIHJlcyB9KSA9PiB7XG5cdHRyeSB7XG5cdFx0bGV0IGlkQ2hhbm5lbCA9IHF1ZXJ5LmlkXG5cblx0XHRsZXQgW3JlcUNoYW5uZWwsIHJlcVNlcmllcywgcmVxQXVkaW9zXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcblx0XHRcdGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfWApLFxuXHRcdFx0ZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9L2NoaWxkX2NoYW5uZWxzYCksXG5cdFx0XHRmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vYXVkaW9fY2xpcHNgKVxuXHRcdF0pXG5cblx0XHRpZiAocmVxQ2hhbm5lbC5zdGF0dXMgPj0gNDA0KSB7XG5cdFx0XHRyZXMuc3RhdHVzQ29kZSA9IHJlcUNoYW5uZWwuc3RhdHVzXG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRjaGFubmVsOiBudWxsLFxuXHRcdFx0XHRhdWRpb0NsaXBzOiBudWxsLFxuXHRcdFx0XHRzZXJpZXM6IG51bGwsXG5cdFx0XHRcdHN0YXR1c0NvZGU6IHJlcUNoYW5uZWwuc3RhdHVzXG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gZ2V0dGluZyBjaGFubmVsIGRhdGFcblx0XHRsZXQgZGF0YUNoYW5uZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKVxuXHRcdGxldCBjaGFubmVsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsXG5cdFx0Ly8gZ2V0dGluZyBhdWRpb3MgZGF0YVxuXHRcdGxldCBkYXRhQXVkaW9zID0gYXdhaXQgcmVxQXVkaW9zLmpzb24oKVxuXHRcdGxldCBhdWRpb0NsaXBzID0gZGF0YUF1ZGlvcy5ib2R5LmF1ZGlvX2NsaXBzXG5cdFx0Ly8gZ2V0dGluZyBjaGlsZWQgY2hhbm5lbHMgZGF0YVxuXHRcdGxldCBkYXRhU2VyaWVzID0gYXdhaXQgcmVxU2VyaWVzLmpzb24oKVxuXHRcdGxldCBzZXJpZXMgPSBkYXRhU2VyaWVzLmJvZHkuY2hhbm5lbHNcblxuXHRcdHJldHVybiB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZTogMjAwIH1cblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0cmVzLnN0YXR1c0NvZGUgPSA1MDNcblx0XHRyZXR1cm4geyBjaGFubmVsOiBudWxsLCBhdWRpb0NsaXBzOiBudWxsLCBzZXJpZXM6IG51bGwsIHN0YXR1c0NvZGU6IDUwMyB9XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ2hhbm5lbFxuIl19 */\\n/*@ sourceURL=/Users/fredyzz/Documents/Cursos/Platzi/nextJs/podcast/pages/channel.js */\"));\n};\n\n_c = Channel;\n\nChannel.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, res, idChannel, _yield$Promise$all, _yield$Promise$all2, reqChannel, reqSeries, reqAudios, dataChannel, channel, dataAudios, audioClips, dataSeries, series;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query, res = _ref2.res;\n            _context.prev = 1;\n            idChannel = query.id;\n            _context.next = 5;\n            return Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/child_channels\")), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips\"))]);\n\n          case 5:\n            _yield$Promise$all = _context.sent;\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n            reqChannel = _yield$Promise$all2[0];\n            reqSeries = _yield$Promise$all2[1];\n            reqAudios = _yield$Promise$all2[2];\n\n            if (!(reqChannel.status >= 404)) {\n              _context.next = 13;\n              break;\n            }\n\n            res.statusCode = reqChannel.status;\n            return _context.abrupt(\"return\", {\n              channel: null,\n              audioClips: null,\n              series: null,\n              statusCode: reqChannel.status\n            });\n\n          case 13:\n            _context.next = 15;\n            return reqChannel.json();\n\n          case 15:\n            dataChannel = _context.sent;\n            channel = dataChannel.body.channel; // getting audios data\n\n            _context.next = 19;\n            return reqAudios.json();\n\n          case 19:\n            dataAudios = _context.sent;\n            audioClips = dataAudios.body.audio_clips; // getting chiled channels data\n\n            _context.next = 23;\n            return reqSeries.json();\n\n          case 23:\n            dataSeries = _context.sent;\n            series = dataSeries.body.channels;\n            return _context.abrupt(\"return\", {\n              channel: channel,\n              audioClips: audioClips,\n              series: series,\n              statusCode: 200\n            });\n\n          case 28:\n            _context.prev = 28;\n            _context.t0 = _context[\"catch\"](1);\n            res.statusCode = 503;\n            return _context.abrupt(\"return\", {\n              channel: null,\n              audioClips: null,\n              series: null,\n              statusCode: 503\n            });\n\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 28]]);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Channel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Channel\");","map":{"version":3,"sources":["/Users/fredyzz/Documents/Cursos/Platzi/nextJs/podcast/pages/channel.js"],"names":["Link","Error","PodcastList","SeriesList","Layout","Channel","channel","audioClips","series","statusCode","title","backgroundImage","urls","banner_image","original","getInitialProps","query","res","idChannel","id","Promise","all","fetch","reqChannel","reqSeries","reqAudios","status","json","dataChannel","body","dataAudios","audio_clips","dataSeries","channels"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport Error from './_error'\nimport PodcastList from '../components/PodcastList'\nimport SeriesList from '../components/SeriesList'\nimport Layout from '../components/Layout'\n\nconst Channel = ({ channel, audioClips, series, statusCode }) => {\n\tif (statusCode !== 200) {\n\t\treturn <Error statusCode={statusCode} />\n\t}\n\n\treturn (\n\t\t<Layout title={`Podcast ${channel.title}`}>\n\t\t\t<nav>\n\t\t\t\t<Link href=\"/\">\n\t\t\t\t\t<a>Volver</a>\n\t\t\t\t</Link>\n\t\t\t</nav>\n\t\t\t<div\n\t\t\t\tclassName=\"banner\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundImage: `url(${channel.urls.banner_image.original})`\n\t\t\t\t}}\n\t\t\t></div>\n\t\t\t<h1>{channel.title}</h1>\n\t\t\t<SeriesList series={series} />\n\t\t\t<PodcastList audioClips={audioClips} />\n\n\t\t\t<style jsx>{`\n\t\t\t\tnav {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\tborder-radius: 25%;\n\t\t\t\t\tbackground: #ffffff;\n\t\t\t\t\tbox-shadow: 20px 20px 60px #d9d9d9, -20px -20px 60px #ffffff;\n\t\t\t\t\tpadding: 8px;\n\t\t\t\t\tmargin: 10px;\n\t\t\t\t}\n\n\t\t\t\tnav a {\n\t\t\t\t\tcolor: black;\n\t\t\t\t\ttext-decoration: none;\n\t\t\t\t}\n\n\t\t\t\t.banner {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tpadding-bottom: 25%;\n\t\t\t\t\tbackground-position: 50% 50%;\n\t\t\t\t\tbackground-size: cover;\n\t\t\t\t\tbackground-color: #aaa;\n\t\t\t\t\tbox-shadow: 20px 20px 60px #d9d9d9, -20px -20px 60px #ffffff;\n\t\t\t\t}\n\n\t\t\t\th1 {\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\ttext-shadow: 0 0 11px #ffffff;\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.3);\n\t\t\t\t\tpadding: 5px;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t}\n\t\t\t`}</style>\n\t\t</Layout>\n\t)\n}\n\nChannel.getInitialProps = async ({ query, res }) => {\n\ttry {\n\t\tlet idChannel = query.id\n\n\t\tlet [reqChannel, reqSeries, reqAudios] = await Promise.all([\n\t\t\tfetch(`https://api.audioboom.com/channels/${idChannel}`),\n\t\t\tfetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n\t\t\tfetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n\t\t])\n\n\t\tif (reqChannel.status >= 404) {\n\t\t\tres.statusCode = reqChannel.status\n\t\t\treturn {\n\t\t\t\tchannel: null,\n\t\t\t\taudioClips: null,\n\t\t\t\tseries: null,\n\t\t\t\tstatusCode: reqChannel.status\n\t\t\t}\n\t\t}\n\n\t\t// getting channel data\n\t\tlet dataChannel = await reqChannel.json()\n\t\tlet channel = dataChannel.body.channel\n\t\t// getting audios data\n\t\tlet dataAudios = await reqAudios.json()\n\t\tlet audioClips = dataAudios.body.audio_clips\n\t\t// getting chiled channels data\n\t\tlet dataSeries = await reqSeries.json()\n\t\tlet series = dataSeries.body.channels\n\n\t\treturn { channel, audioClips, series, statusCode: 200 }\n\t} catch (err) {\n\t\tres.statusCode = 503\n\t\treturn { channel: null, audioClips: null, series: null, statusCode: 503 }\n\t}\n}\n\nexport default Channel\n"]},"metadata":{},"sourceType":"module"}